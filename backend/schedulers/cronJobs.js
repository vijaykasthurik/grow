const cron = require('node-cron');
const { sendWateringReminders } = require('./wateringJob');
const { sendOrganicTips } = require('./tipJob');
const logger = require('../utils/logger'); // Import logger

// ðŸ’§ Indoor â€“ 8:00 AM & 6:00 PM
cron.schedule('30 20 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 08:00 (Indoor)');
Â  try {
Â  Â  await sendWateringReminders('Indoor');
Â  } catch (err) {
Â  Â  logger.error(`Error in Indoor 08:00 watering reminder: ${err.message}`);
Â  }
});

cron.schedule('0 18 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 18:09 (Indoor - Evening)');
Â  try {
Â  Â  await sendWateringReminders('Indoor');
Â  } catch (err) {
Â  Â  logger.error(`Error in Indoor 18:00 watering reminder: ${err.message}`);
Â  }
});

// ðŸ’§ Balcony â€“ 7:30 AM & 6:00 PM
cron.schedule('30 7 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 07:30 (Balcony)');
Â  try {
Â  Â  await sendWateringReminders('Balcony');
Â  } catch (err) {
Â  Â  logger.error(`Error in Balcony 07:30 watering reminder: ${err.message}`);
Â  }
});

cron.schedule('0 18 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 18:00 (Balcony)');
Â  try {
Â  Â  await sendWateringReminders('Balcony');
Â  } catch (err) {
Â  Â  logger.error(`Error in Balcony 18:00 watering reminder: ${err.message}`);
Â  }
});

// ðŸ’§ Outdoor â€“ 6:30 AM, 12 PM, 6:30 PM
cron.schedule('30 6 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 06:30 (Outdoor)');
Â  try {
Â  Â  await sendWateringReminders('Outdoor');
Â  } catch (err) {
Â  Â  logger.error(`Error in Outdoor 06:30 watering reminder: ${err.message}`);
Â  }
});

cron.schedule('0 12 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 12:00 (Outdoor)');
Â  try {
Â  Â  await sendWateringReminders('Outdoor');
Â  } catch (err) {
Â  Â  logger.error(`Error in Outdoor 12:00 watering reminder: ${err.message}`);
Â  }
});

cron.schedule('30 18 * * *', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder at 18:30 (Outdoor)');
Â  try {
Â  Â  await sendWateringReminders('Outdoor');
Â  } catch (err) {
Â  Â  logger.error(`Error in Outdoor 18:30 watering reminder: ${err.message}`);
Â  }
});

// ðŸ’§ 2â€“3 times/week â€“ Mon/Wed/Fri at 7:00 AM
cron.schedule('0 7 * * 1,3,5', async () => {
Â  logger.info('[NODE-CRON] Running watering reminder (2â€“3 times/week) at 07:00');
Â  try {
Â  Â  await sendWateringReminders('2-3 times/week');
Â  } catch (err) {
Â  Â  logger.error(`Error in 2â€“3 times/week 07:00 watering reminder: ${err.message}`);
Â  }
});

// ðŸŒ± Organic tips â€“ every day at 12:00 AM
cron.schedule('0 0 * * *', async () => {
Â  logger.info('[NODE-CRON] Running organic tip job at midnight');
Â  try {
Â  Â  await sendOrganicTips();
Â  } catch (err) {
Â  Â  logger.error(`Error in organic tip job at midnight: ${err.message}`);
Â  }
});
